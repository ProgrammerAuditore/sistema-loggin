<!-- Modal -->
<div class="modal fade" id="entrarModal" tabindex="-1" aria-labelledby="entrarModalLabel" aria-hidden="true">
  <div class="modal-dialog">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="entrarModalLabel">Iniciar sesión</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <form id="form-entrar">
            <div class="mb-3">
              <label for="correo" class="form-label">Correo electrónico</label>
              <input type="email" name="correo" class="form-control" placeholder="Escribe un correo" aria-describedby="correoId" required>
            </div>
            <div class="mb-3">
              <label for="passwd" class="form-label">Contraseña</label>
              <input type="password" name="passwd" class="form-control" placeholder="Escribe una contraseña" aria-describedby="passwdId" required>
            </div>
        </form>
        <button class="btn btn-secondary" type="button" id="loggin-facebook">Entrar con facebook</button>
        <button class="btn btn-secondary" type="button" id="loggin-google">Entrar con google</button>
        <button class="btn btn-secondary" type="button" id="loggin-github">Entrar con github</button>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-secondary btn-entrar-cerrar" data-bs-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary btn-entrar">Entrar</button>
      </div>
    </div>
  </div>
</div>

<script type="module">
  import { getAuth, signInWithEmailAndPassword, onAuthStateChanged, GoogleAuthProvider, signInWithPopup, FacebookAuthProvider, GithubAuthProvider } from "https://www.gstatic.com/firebasejs/9.7.0/firebase-auth.js";
  const formEntrar = document.querySelector('#form-entrar');
  const btnCerrarEntrar = document.querySelector('.btn-entrar-cerrar');
  const btnEntrar = document.querySelector('.btn-entrar');
  const btnLogginGoogle = document.querySelector('#loggin-google');
  const btnLogginFacebook = document.querySelector('#loggin-facebook');
  const btnLogginGitHub = document.querySelector('#loggin-github');

  btnEntrar.addEventListener('click', function(e){
    btnCerrarEntrar.click();
    const inputs = Object.keys(formEntrar).map(key => formEntrar[key].value || 'input:error');
    const usuario = { correo : inputs[0], passwd : inputs[1]};
    const resp = inputs.includes('input:error');

    if( resp ){
      swal("Aviso", "Todo los campos son requeridos", "info");
      return;
    }

    // Iniciar sesion
    const auth = getAuth();
    signInWithEmailAndPassword(auth, usuario.correo, usuario.passwd)
    .then((userCredential) => {
        // Signed in
        const user = userCredential.user;
        onAuthStateChanged(auth, (user) => {
            if (user) {
                // User is signed in, see docs for a list of available properties
                // https://firebase.google.com/docs/reference/js/firebase.User
                formEntrar.reset();
                swal("Bienvenido", "Usted a iniciado sesión exitosamente.", "success");
            } else {
                // User is signed out
                // ...
        }
        });
    })
    .catch((error) => {
        const errorCode = error.code;
        const errorMessage = error.message;
        swal(`Error ${errorCode}`, `${errorMessage}`, "error");
    });
    
  });

  // Google login
  btnLogginGoogle.addEventListener('click', () => {
    btnCerrarEntrar.click();
    const provider = new GoogleAuthProvider();
    provider.addScope('https://www.googleapis.com/auth/contacts.readonly');

    const auth = getAuth();
      signInWithPopup(auth, provider)
        .then((result) => {
          // This gives you a Google Access Token. You can use it to access the Google API.
          const credential = GoogleAuthProvider.credentialFromResult(result);
          const token = credential.accessToken;
          // The signed-in user info.
          const user = result.user;
          // ...
          console.log(user);
          swal("Bienvenido", "Usted a iniciado sesión exitosamente.", "success");

        }).catch((error) => {
          // Handle Errors here.
          const errorCode = error.code;
          const errorMessage = error.message;
          // The email of the user's account used.
          const email = error.email;
          // The AuthCredential type that was used.
          const credential = GoogleAuthProvider.credentialFromError(error);
          // ...
          swal(`Error ${errorCode}`, `${errorMessage}`, "error");
        });
  });

  // Facebook login
  btnLogginFacebook.addEventListener('click', () => {
    btnCerrarEntrar.click();
    const provider = new FacebookAuthProvider();
    provider.addScope('user_birthday');
    provider.setCustomParameters({
      'display': 'popup'
    });

    const auth = getAuth();
    signInWithPopup(auth, provider)
      .then((result) => {
        // The signed-in user info.
        const user = result.user;

        // This gives you a Facebook Access Token. You can use it to access the Facebook API.
        const credential = FacebookAuthProvider.credentialFromResult(result);
        const accessToken = credential.accessToken;

        // ...
        console.log(user);
        swal("Bienvenido", "Usted a iniciado sesión exitosamente.", "success");

      })
      .catch((error) => {
        // Handle Errors here.
        const errorCode = error.code;
        const errorMessage = error.message;
        // The email of the user's account used.
        const email = error.email;
        // The AuthCredential type that was used.
        const credential = FacebookAuthProvider.credentialFromError(error);
        // ...
        swal(`Error ${errorCode}`, `${errorMessage}`, "error");
      });
  });

  btnLogginGitHub.addEventListener('click', () => {
    btnCerrarEntrar.click();
    const provider = new GithubAuthProvider();
    provider.addScope('repo');

    const auth = getAuth();
        signInWithPopup(auth, provider)
          .then((result) => {
            // This gives you a GitHub Access Token. You can use it to access the GitHub API.
            const credential = GithubAuthProvider.credentialFromResult(result);
            const token = credential.accessToken;

            // The signed-in user info.
            const user = result.user;
            // ...
            console.log(user);
            swal("Bienvenido", "Usted a iniciado sesión exitosamente.", "success");
            

          }).catch((error) => {
            // Handle Errors here.
            const errorCode = error.code;
            const errorMessage = error.message;
            // The email of the user's account used.
            const email = error.email;
            // The AuthCredential type that was used.
            const credential = GithubAuthProvider.credentialFromError(error);
            // ...
            swal(`Error ${errorCode}`, `${errorMessage}`, "error");
          });


  });
</script>